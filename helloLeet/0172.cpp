// n的阶乘后的零的个数

/*
 * n!后零的个数等价于n!的因子10的个数，而10可以分解为2和5，即等价于n!中，因子2和5的个数中较少的那个，显然因子5的个数更少，即变为求n!中因子5的个数
 *对于1，2，3...n
 每5个数中有一个数可贡献出一个因子5（5的倍数），即有n / 5个数可以贡献一个5
 而在那些可以贡献出一个因子5的数中，每5个数可再贡献一个5（25的倍数），即有(n / 5) / 5个数可贡献两个5
 以此类推

 将以上的数加起来就是结果
 * */

class Solution {
public:
    int trailingZeroes(int n) {
        int ans = 0;
        while (n) {
            n /= 5;
            ans += n;
        }
        return ans;
    }
};
